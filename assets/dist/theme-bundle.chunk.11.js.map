{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/utils/form-utils.js","webpack:///./assets/js/theme/common/utils/url-utils.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","formatCategoryTreeForJSTree","node","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","navigate","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","activateTab","searchData","url","count","urlUtils","replaceParams","page","goToUrl","showContent","$tabToActivate","find","each","idx","tab","$tab","is","removeAttr","attr","onTabChangeWithArrows","event","eventKey","which","$tabsCollection","index","document","activeElement","nextTabIdx","$activeTab","activeTabIdx","lastTabIdx","length","get","focus","trigger","onReady","compareProducts","context","urls","$searchForm","$categoryTreeContainer","Url","parse","window","location","href","treeData","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","preventDefault","query","section","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","input","type","name","value","append","loadTreeNodes","cb","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","done","formattedResults","dataNode","$container","treeOptions","core","themes","icons","checkbox","three_state","plugins","$contentListingContainer","$searchHeading","$searchCount","$contentCount","requestOptions","template","productListing","contentListing","sidebar","heading","productCount","contentCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","forms","email","test","password","notEmpty","inputTagNames","classifyForm","formSelector","options","$inputs","join","formFieldClass","__","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","val","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","Object","keys","classes","hasClass","getUrl","pathname","search","history","pushState","title","params","param","parsed","hasOwnProperty","format","buildQueryString","queryData","key","out","Array","isArray","ndx","substring","parseQueryParams","i","temp","split","updateCounterNav","counter","$link","urlContext","compare","compareCounter","$compareLink","$checked","element","item","product","currentTarget","$clickedCompareLink","checked","indexOf","splice","decrementCounter","showAlertModal","queryParams","serialize","PageManager","callback","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","collapsedFacets","collapsedFacetItems","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","setTimeout","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","err","hide","Error","expandFacetItems","$navList","hasMoreResults","toggleFacetItems","getMoreFacetResults","facet","facetUrl","list_all","response","open","updateContent","$items","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","priceRangeValidator","unbindEvents","onPopState","off","stopPropagation","$toggle","toggleClass","urlQueryParams","assign","constants","VALID","decodeURI","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","replaceState"],"mappings":"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","file":"theme-bundle.chunk.11.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport FacetedSearch from './common/faceted-search';\nimport compareProducts from './global/compare-products';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\nimport collapsibleFactory from './common/collapsible';\nimport 'jstree';\nimport nod from './common/nod';\n\nconst leftArrowKey = 37;\nconst rightArrowKey = 39;\n\nexport default class Search extends CatalogPage {\n    formatCategoryTreeForJSTree(node) {\n        const nodeData = {\n            text: node.data,\n            id: node.metadata.id,\n            state: {\n                selected: node.selected,\n            },\n        };\n\n        if (node.state) {\n            nodeData.state.opened = node.state === 'open';\n            nodeData.children = true;\n        }\n\n        if (node.children) {\n            nodeData.children = [];\n            node.children.forEach((childNode) => {\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\n            });\n        }\n\n        return nodeData;\n    }\n\n    showProducts(navigate = true) {\n        this.$productListingContainer.removeClass('u-hidden');\n        this.$facetedSearchContainer.removeClass('u-hidden');\n        this.$contentResultsContainer.addClass('u-hidden');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-content-results-toggle]').addClass('navBar-action');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action');\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\n\n        this.activateTab($('[data-product-results-toggle]'));\n\n        if (!navigate) {\n            return;\n        }\n\n        const searchData = $('#search-results-product-count span').data();\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\n            page: 1,\n        });\n\n        urlUtils.goToUrl(url);\n    }\n\n    showContent(navigate = true) {\n        this.$contentResultsContainer.removeClass('u-hidden');\n        this.$productListingContainer.addClass('u-hidden');\n        this.$facetedSearchContainer.addClass('u-hidden');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-product-results-toggle]').addClass('navBar-action');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action');\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\n\n        this.activateTab($('[data-content-results-toggle]'));\n\n        if (!navigate) {\n            return;\n        }\n\n        const searchData = $('#search-results-content-count span').data();\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\n            page: 1,\n        });\n\n        urlUtils.goToUrl(url);\n    }\n\n    activateTab($tabToActivate) {\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\n\n        $tabsCollection.each((idx, tab) => {\n            const $tab = $(tab);\n\n            if ($tab.is($tabToActivate)) {\n                $tab.removeAttr('tabindex');\n                $tab.attr('aria-selected', true);\n                return;\n            }\n\n            $tab.attr('tabindex', '-1');\n            $tab.attr('aria-selected', false);\n        });\n    }\n\n    onTabChangeWithArrows(event) {\n        const eventKey = event.which;\n        const isLeftOrRightArrowKeydown = eventKey === leftArrowKey\n            || eventKey === rightArrowKey;\n        if (!isLeftOrRightArrowKeydown) return;\n\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\n\n        const isActiveElementNotTab = $tabsCollection.index($(document.activeElement)) === -1;\n        if (isActiveElementNotTab) return;\n\n        const $activeTab = $(`#${document.activeElement.id}`);\n        const activeTabIdx = $tabsCollection.index($activeTab);\n        const lastTabIdx = $tabsCollection.length - 1;\n\n        let nextTabIdx;\n        switch (eventKey) {\n        case leftArrowKey:\n            nextTabIdx = activeTabIdx === 0 ? lastTabIdx : activeTabIdx - 1;\n            break;\n        case rightArrowKey:\n            nextTabIdx = activeTabIdx === lastTabIdx ? 0 : activeTabIdx + 1;\n            break;\n        default: break;\n        }\n\n        $($tabsCollection.get(nextTabIdx)).focus().trigger('click');\n    }\n\n    onReady() {\n        compareProducts(this.context.urls);\n\n        const $searchForm = $('[data-advanced-search-form]');\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\n        const url = Url.parse(window.location.href, true);\n        const treeData = [];\n        this.$productListingContainer = $('#product-listing-container');\n        this.$facetedSearchContainer = $('#faceted-search-container');\n        this.$contentResultsContainer = $('#search-results-content');\n\n        // Init faceted search\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        $('[data-product-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showProducts();\n        });\n\n        $('[data-content-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showContent();\n        });\n\n        $('[data-search-page-tabs]').on('keyup', this.onTabChangeWithArrows);\n\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\n            this.showContent(false);\n        } else {\n            this.showProducts(false);\n        }\n\n        const validator = this.initValidation($searchForm)\n            .bindValidation($searchForm.find('#search_query_adv'));\n\n        this.context.categoryTree.forEach((node) => {\n            treeData.push(this.formatCategoryTreeForJSTree(node));\n        });\n\n        this.categoryTreeData = treeData;\n        this.createCategoryTree($categoryTreeContainer);\n\n        $searchForm.on('submit', event => {\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\n\n            if (!validator.check()) {\n                return event.preventDefault();\n            }\n\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\n\n            for (const categoryId of selectedCategoryIds) {\n                const input = $('<input>', {\n                    type: 'hidden',\n                    name: 'category[]',\n                    value: categoryId,\n                });\n\n                $searchForm.append(input);\n            }\n        });\n    }\n\n    loadTreeNodes(node, cb) {\n        $.ajax({\n            url: '/remote/v1/category-tree',\n            data: {\n                selectedCategoryId: node.id,\n                prefix: 'category',\n            },\n            headers: {\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\n            },\n        }).done(data => {\n            const formattedResults = [];\n\n            data.forEach((dataNode) => {\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\n            });\n\n            cb(formattedResults);\n        });\n    }\n\n    createCategoryTree($container) {\n        const treeOptions = {\n            core: {\n                data: (node, cb) => {\n                    // Root node\n                    if (node.id === '#') {\n                        cb(this.categoryTreeData);\n                    } else {\n                        // Lazy loaded children\n                        this.loadTreeNodes(node, cb);\n                    }\n                },\n                themes: {\n                    icons: true,\n                },\n            },\n            checkbox: {\n                three_state: false,\n            },\n            plugins: [\n                'checkbox',\n            ],\n        };\n\n        $container.jstree(treeOptions);\n    }\n\n    initFacetedSearch() {\n        const $productListingContainer = $('#product-listing-container');\n        const $contentListingContainer = $('#search-results-content');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const $searchHeading = $('#search-results-heading');\n        const $searchCount = $('#search-results-product-count');\n        const $contentCount = $('#search-results-content-count');\n        const productsPerPage = this.context.searchProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'search/product-listing',\n                contentListing: 'search/content-listing',\n                sidebar: 'search/sidebar',\n                heading: 'search/heading',\n                productCount: 'search/product-count',\n                contentCount: 'search/content-count',\n            },\n            config: {\n                product_results: {\n                    limit: productsPerPage,\n                },\n            },\n            showMore: 'search/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $searchHeading.html(content.heading);\n\n            const url = Url.parse(window.location.href, true);\n            if (url.query.section === 'content') {\n                $contentListingContainer.html(content.contentListing);\n                $contentCount.html(content.contentCount);\n                this.showContent(false);\n            } else {\n                $productListingContainer.html(content.productListing);\n                $facetedSearchContainer.html(content.sidebar);\n                $searchCount.html(content.productCount);\n                this.showProducts(false);\n            }\n\n            $('body').triggerHandler('compareReset');\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        });\n    }\n\n    initValidation($form) {\n        this.$form = $form;\n        this.validator = nod({\n            submit: $form,\n        });\n\n        return this;\n    }\n\n    bindValidation($element) {\n        if (this.validator) {\n            this.validator.add({\n                selector: $element,\n                validate: 'presence',\n                errorMessage: $element.data('errorMessage'),\n            });\n        }\n\n        return this;\n    }\n\n    check() {\n        if (this.validator) {\n            this.validator.performCheck();\n            return this.validator.areAll('valid');\n        }\n\n        return false;\n    }\n}\n","const forms = {\n    email(value) {\n        const re = /^.+@.+\\..+/;\n        return re.test(value);\n    },\n\n    /**\n     * Validates a password field\n     * @param value\n     * @returns {boolean}\n     */\n    password(value) {\n        return this.notEmpty(value);\n    },\n\n    /**\n     * validates if a field is empty\n     * @param value\n     * @returns {boolean}\n     *\n     */\n    notEmpty(value) {\n        return value.length > 0;\n    },\n};\n\nexport default forms;\n","import _ from 'lodash';\nimport nod from '../nod';\nimport forms from '../models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","import Url from 'url';\n\nconst urlUtils = {\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\n\n    goToUrl: (url) => {\n        window.history.pushState({}, document.title, url);\n        $(window).trigger('statechange');\n    },\n\n    replaceParams: (url, params) => {\n        const parsed = Url.parse(url, true);\n        let param;\n\n        // Let the formatter use the query object to build the new url\n        parsed.search = null;\n\n        for (param in params) {\n            if (params.hasOwnProperty(param)) {\n                parsed.query[param] = params[param];\n            }\n        }\n\n        return Url.format(parsed);\n    },\n\n    buildQueryString: (queryData) => {\n        let out = '';\n        let key;\n        for (key in queryData) {\n            if (queryData.hasOwnProperty(key)) {\n                if (Array.isArray(queryData[key])) {\n                    let ndx;\n\n                    for (ndx in queryData[key]) {\n                        if (queryData[key].hasOwnProperty(ndx)) {\n                            out += `&${key}=${queryData[key][ndx]}`;\n                        }\n                    }\n                } else {\n                    out += `&${key}=${queryData[key]}`;\n                }\n            }\n        }\n\n        return out.substring(1);\n    },\n\n    parseQueryParams: (queryData) => {\n        const params = {};\n\n        for (let i = 0; i < queryData.length; i++) {\n            const temp = queryData[i].split('=');\n\n            if (temp[0] in params) {\n                if (Array.isArray(params[temp[0]])) {\n                    params[temp[0]].push(temp[1]);\n                } else {\n                    params[temp[0]] = [params[temp[0]], temp[1]];\n                }\n            } else {\n                params[temp[0]] = temp[1];\n            }\n        }\n\n        return params;\n    },\n};\n\nexport default urlUtils;\n","import _ from 'lodash';\nimport { showAlertModal } from './modal';\n\nfunction decrementCounter(counter, item) {\n    const index = counter.indexOf(item);\n\n    if (index > -1) {\n        counter.splice(index, 1);\n    }\n}\n\nfunction incrementCounter(counter, item) {\n    counter.push(item);\n}\n\nfunction updateCounterNav(counter, $link, urlContext) {\n    if (counter.length !== 0) {\n        if (!$link.is('visible')) {\n            $link.addClass('show');\n        }\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\n        $link.find('span.countPill').html(counter.length);\n    } else {\n        $link.removeClass('show');\n    }\n}\n\nexport default function (urlContext) {\n    let compareCounter = [];\n\n    const $compareLink = $('a[data-compare-nav]');\n\n    $('body').on('compareReset', () => {\n        const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        compareCounter = $checked.length ? _.map($checked, element => element.value) : [];\n        updateCounterNav(compareCounter, $compareLink, urlContext);\n    });\n\n    $('body').triggerHandler('compareReset');\n\n    $('body').on('click', '[data-compare-id]', event => {\n        const product = event.currentTarget.value;\n        const $clickedCompareLink = $('a[data-compare-nav]');\n\n        if (event.currentTarget.checked) {\n            incrementCounter(compareCounter, product);\n        } else {\n            decrementCounter(compareCounter, product);\n        }\n\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\n    });\n\n    $('body').on('submit', '[data-product-compare]', event => {\n        const $this = $(event.currentTarget);\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\n\n        if (productsToCompare.length <= 1) {\n            showAlertModal('You must select at least two products to compare');\n            event.preventDefault();\n        }\n    });\n\n    $('body').on('click', 'a[data-compare-nav]', () => {\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        if ($clickedCheckedInput.length <= 1) {\n            showAlertModal('You must select at least two products to compare');\n            return false;\n        }\n    });\n}\n","import PageManager from './page-manager';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    onSortBySubmit(event) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(event.currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport Url from 'url';\nimport urlUtils from './utils/url-utils';\nimport modalFactory from '../global/modal';\nimport collapsibleFactory from './collapsible';\nimport { Validators } from './utils/form-utils';\nimport nod from './nod';\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n    /**\n     * @param {object} requestOptions - Object with options for the ajax requests\n     * @param {function} callback - Function to execute after fetching templates\n     * @param {object} options - Configurable options\n     * @example\n     *\n     * let requestOptions = {\n     *      templates: {\n     *          productListing: 'category/product-listing',\n     *          sidebar: 'category/sidebar'\n     *     }\n     * };\n     *\n     * let templatesDidLoad = function(content) {\n     *     $productListingContainer.html(content.productListing);\n     *     $facetedSearchContainer.html(content.sidebar);\n     * };\n     *\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n     */\n    constructor(requestOptions, callback, options) {\n        const defaultOptions = {\n            accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\n            blockerSelector: '#facetedSearch .blocker',\n            clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\n            componentSelector: '#facetedSearch-navList',\n            facetNavListSelector: '#facetedSearch .navList',\n            priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\n            priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\n            priceRangeFormSelector: '#facet-range-form',\n            priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\n            priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\n            showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\n            facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\n            modal: modalFactory('#modal')[0],\n            modalOpen: false,\n        };\n\n        // Private properties\n        this.requestOptions = requestOptions;\n        this.callback = callback;\n        this.options = _.extend({}, defaultOptions, options);\n        this.collapsedFacets = [];\n        this.collapsedFacetItems = [];\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Show limited items by default\n        $(this.options.facetNavListSelector).each((index, navList) => {\n            this.collapseFacetItems($(navList));\n        });\n\n        // Mark initially collapsed accordions\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n\n            if (collapsible.isCollapsed) {\n                this.collapsedFacets.push(collapsible.targetId);\n            }\n        });\n\n        // Collapse all facets if initially hidden\n        // NOTE: Need to execute after Collapsible gets bootstrapped\n        setTimeout(() => {\n            if ($(this.options.componentSelector).is(':hidden')) {\n                this.collapseAllFacets();\n            }\n        });\n\n        // Observe user events\n        this.onStateChange = this.onStateChange.bind(this);\n        this.onToggleClick = this.onToggleClick.bind(this);\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\n        this.onClearFacet = this.onClearFacet.bind(this);\n        this.onFacetClick = this.onFacetClick.bind(this);\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\n        this.filterFacetItems = this.filterFacetItems.bind(this);\n\n        this.bindEvents();\n    }\n\n    // Public methods\n    refreshView(content) {\n        if (content) {\n            this.callback(content);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Restore view state\n        this.restoreCollapsedFacets();\n        this.restoreCollapsedFacetItems();\n\n        // Bind events\n        this.bindEvents();\n    }\n\n    updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }\n\n    expandFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Remove\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n\n    collapseFacetItems($navList) {\n        const id = $navList.attr('id');\n        const hasMoreResults = $navList.data('hasMoreResults');\n\n        if (hasMoreResults) {\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n        } else {\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n        }\n    }\n\n    toggleFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Toggle depending on `collapsed` flag\n        if (_.includes(this.collapsedFacetItems, id)) {\n            this.getMoreFacetResults($navList);\n\n            return true;\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    getMoreFacetResults($navList) {\n        const facet = $navList.data('facet');\n        const facetUrl = urlUtils.getUrl();\n\n        if (this.requestOptions.showMore) {\n            api.getPage(facetUrl, {\n                template: this.requestOptions.showMore,\n                params: {\n                    list_all: facet,\n                },\n            }, (err, response) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                this.options.modal.open();\n                this.options.modalOpen = true;\n                this.options.modal.updateContent(response);\n            });\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    filterFacetItems(event) {\n        const $items = $('.navList-item');\n        const query = $(event.currentTarget).val().toLowerCase();\n\n        $items.each((index, element) => {\n            const text = $(element).text().toLowerCase();\n            if (text.indexOf(query) !== -1) {\n                $(element).show();\n            } else {\n                $(element).hide();\n            }\n        });\n    }\n\n    expandFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.open();\n    }\n\n    collapseFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.close();\n    }\n\n    collapseAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.collapseFacet($accordionToggle);\n        });\n    }\n\n    expandAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.expandFacet($accordionToggle);\n        });\n    }\n\n    // Private methods\n    initPriceValidator() {\n        if ($(this.options.priceRangeFormSelector).length === 0) {\n            return;\n        }\n\n        const validator = nod();\n        const selectors = {\n            errorSelector: this.options.priceRangeErrorSelector,\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\n            formSelector: this.options.priceRangeFormSelector,\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\n        };\n\n        Validators.setMinMaxPriceValidation(validator, selectors);\n\n        this.priceRangeValidator = validator;\n    }\n\n    restoreCollapsedFacetItems() {\n        const $navLists = $(this.options.facetNavListSelector);\n\n        // Restore collapsed state for each facet\n        $navLists.each((index, navList) => {\n            const $navList = $(navList);\n            const id = $navList.attr('id');\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\n\n            if (shouldCollapse) {\n                this.collapseFacetItems($navList);\n            } else {\n                this.expandFacetItems($navList);\n            }\n        });\n    }\n\n    restoreCollapsedFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n            const id = collapsible.targetId;\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\n\n            if (shouldCollapse) {\n                this.collapseFacet($accordionToggle);\n            } else {\n                this.expandFacet($accordionToggle);\n            }\n        });\n    }\n\n    bindEvents() {\n        // Clean-up\n        this.unbindEvents();\n\n        // DOM events\n        $(window).on('statechange', this.onStateChange);\n        $(window).on('popstate', this.onPopState);\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\n\n        // Hooks\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    unbindEvents() {\n        // DOM events\n        $(window).off('statechange', this.onStateChange);\n        $(window).off('popstate', this.onPopState);\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\n\n        // Hooks\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    onClearFacet(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Update URL\n        urlUtils.goToUrl(url);\n    }\n\n    onToggleClick(event) {\n        const $toggle = $(event.currentTarget);\n        const $navList = $($toggle.attr('href'));\n\n        // Prevent default\n        event.preventDefault();\n\n        // Toggle visible items\n        this.toggleFacetItems($navList);\n    }\n\n    onFacetClick(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n\n        $link.toggleClass('is-selected');\n\n        // Update URL\n        urlUtils.goToUrl(url);\n\n        if (this.options.modalOpen) {\n            this.options.modal.close();\n        }\n    }\n\n    onSortBySubmit(event) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(event.currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        event.preventDefault();\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onRangeSubmit(event) {\n        event.preventDefault();\n\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n            return;\n        }\n\n        const url = Url.parse(window.location.href, true);\n        let queryParams = decodeURI($(event.currentTarget).serialize()).split('&');\n        queryParams = urlUtils.parseQueryParams(queryParams);\n\n        for (const key in queryParams) {\n            if (queryParams.hasOwnProperty(key)) {\n                url.query[key] = queryParams[key];\n            }\n        }\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onStateChange() {\n        this.updateView();\n    }\n\n    onAccordionToggle(event) {\n        const $accordionToggle = $(event.currentTarget);\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n        const id = collapsible.targetId;\n\n        if (collapsible.isCollapsed) {\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n        } else {\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\n        }\n    }\n\n    onPopState() {\n        const currentUrl = window.location.href;\n        const searchParams = new URLSearchParams(currentUrl);\n        // If searchParams does not contain a page value then modify url query string to have page=1\n        if (!searchParams.has('page')) {\n            const linkUrl = $('.pagination-link').attr('href');\n            const re = /page=[0-9]+/i;\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\n            window.history.replaceState({}, document.title, updatedLinkUrl);\n        }\n        $(window).trigger('statechange');\n    }\n}\n\nexport default FacetedSearch;\n"],"sourceRoot":""}